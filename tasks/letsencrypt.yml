---
- name: Make sure git is in place to install letsencrypt
  apt:
    name: git
    state: latest

- name: Install letsencrypt from git
  git:
    repo: https://github.com/letsencrypt/letsencrypt
    dest: "{{ letsencrypt_install_path }}"

# this is necessary until the nginx extension is up to par; makes the standalone letsencrypt directive work
- name: Stop nginx to create certificates
  service: name=nginx state=stopped

#- name: Create new letsencrypt certificates
#  command: "{{ letsencrypt_install_path }}/letsencrypt-auto certonly --standalone --renew-by-default --email {{ item.value.admin_email }} -d {{ item.key }} --agree-tos creates={{ letsencrypt_cert_path }}/{{ item.key}}/fullchain.pem"
#  when: item.value.letsencrypt is undefined or item.value.letsencrypt
#  with_dict: "{{ nginx_domains }}"
#  notify: start nginx

- name: Check modification times of existing letsencrypt certificates
  stat:
    path: "{{ letsencrypt_cert_path }}/{{ item.key }}/privkey.pem"
  register: cert_renewal
  with_dict: "{{ nginx_domains }}"

- name: Renew letsencrypt certificates if expire time is over
  command: "{{ letsencrypt_install_path }}/letsencrypt-auto certonly --standalone --renew-by-default --email {{ nginx_domains[item.0].admin_email }} -d {{ item.0 }} --agree-tos"
  when: "{{ item.1.stat.mtime is defined and ansible_date_time.epoch|int - item.1.stat.mtime|int >= letsencrypt_renewal_period }}"
  with_together:
    - "{{ nginx_domains }}"
    - "{{ cert_renewal.results }}"
  notify: start nginx
