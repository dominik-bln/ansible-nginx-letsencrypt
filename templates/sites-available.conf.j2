# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
{% if item.value.http_redirect is undefined or item.value.http_redirect %}
server {
  listen [::]:80 ipv6only=on;
  listen 80;

  # listen on both hosts
  server_name {{ item.key }} {% if item.value.redirects is defined %}{{ item.value.redirects }}{% endif %};

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://{{ item.key }}$request_uri;
}
{% endif %}

{% if item.value.redirects is defined and item.value.redirects %}
server {
  listen [::]:443 ipv6only=on ssl spdy;
  listen 443 ssl spdy;

  # listen on the wrong host
  server_name {{ item.value.redirects }};

  include includes/directive-only/ssl.conf;

  {% include 'ssl.conf.j2' %}

  # and redirect to the non-www host (declared below)
  return 301 https://{{ item.key }}$request_uri;
}
{% endif %}

server {
  listen [::]:443 ipv6only=on ssl spdy deferred;
  listen 443 ssl spdy deferred;

  # The host name to respond to
  server_name {{ item.key }};

  include includes/directive-only/ssl.conf;
  include includes/directive-only/ssl-stapling.conf

  {% include 'ssl.conf.j2' %}

  # Path for static files
  {% if item.value.create_htdocs %}
  root /var/www/{{ item.key }}/public;
  {% else %}
  ##root /var/www/{{ item.key }}/public;
  {% endif %}

  #Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 404 /404.html;

  # Include the basic h5bp config set
  include includes/basic.conf;
}
